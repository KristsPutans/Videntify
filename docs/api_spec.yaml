openapi: 3.0.0
info:
  title: VidID API
  description: |
    VidID API for video identification services. This API allows users to identify
    videos from short clips, similar to how Shazam identifies music.
  version: 1.0.0
  contact:
    name: VidID Team
    email: support@vidid.com

servers:
  - url: https://api.vidid.com/v1
    description: Production server
  - url: https://staging-api.vidid.com/v1
    description: Staging server
  - url: http://localhost:8000/v1
    description: Local development server

tags:
  - name: Authentication
    description: Authentication endpoints
  - name: Identification
    description: Video identification endpoints
  - name: User
    description: User account management
  - name: History
    description: Identification history

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login and get access token
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user information
      operationId: getCurrentUser
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /identify/video:
    post:
      tags:
        - Identification
      summary: Identify a video clip
      operationId: identifyVideo
      security:
        - bearerAuth: []
        - apiKey: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - video_file
              properties:
                video_file:
                  type: string
                  format: binary
                  description: Video file to identify
                matching_algorithms:
                  type: array
                  description: Matching algorithms to use
                  items:
                    type: string
                    enum: [exact_hash, hamming_distance, cosine_similarity, temporal_alignment, ensemble]
                    default: ensemble
                max_results:
                  type: integer
                  description: Maximum number of results to return
                  default: 5
                  minimum: 1
                  maximum: 20
      responses:
        '200':
          description: Identification results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoIdentificationResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /identify/frame:
    post:
      tags:
        - Identification
      summary: Identify a single video frame
      operationId: identifyFrame
      security:
        - bearerAuth: []
        - apiKey: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - frame_file
              properties:
                frame_file:
                  type: string
                  format: binary
                  description: Image file to identify
                matching_algorithms:
                  type: array
                  description: Matching algorithms to use
                  items:
                    type: string
                    enum: [exact_hash, hamming_distance, cosine_similarity, ensemble]
                    default: ensemble
                max_results:
                  type: integer
                  description: Maximum number of results to return
                  default: 5
                  minimum: 1
                  maximum: 20
      responses:
        '200':
          description: Identification results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoIdentificationResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /user/history:
    get:
      tags:
        - History
      summary: Get user's identification history
      operationId: getUserHistory
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: User's identification history
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: array
                    items:
                      $ref: '#/components/schemas/HistoryItem'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /user/profile:
    put:
      tags:
        - User
      summary: Update user profile
      operationId: updateUserProfile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                notifications_enabled:
                  type: boolean
                theme:
                  type: string
                  enum: [light, dark, system]
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /share/result:
    post:
      tags:
        - Identification
      summary: Share an identification result
      operationId: shareResult
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query_id
                - platform
              properties:
                query_id:
                  type: string
                  description: ID of the query to share
                platform:
                  type: string
                  description: Social platform to share on
                  enum: [twitter, facebook, instagram, whatsapp]
      responses:
        '200':
          description: Shared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  share_url:
                    type: string
                    format: uri
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
          example: bearer
        expires_in:
          type: integer
          example: 3600

    UserResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
          format: email
        created_at:
          type: string
          format: date-time
        is_admin:
          type: boolean

    MatchResult:
      type: object
      properties:
        content_id:
          type: string
        title:
          type: string
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
        match_type:
          type: string
        timestamp:
          type: number
          format: float
          nullable: true
        formatted_timestamp:
          type: string
          nullable: true
        thumbnail:
          type: string
          format: byte
          nullable: true
          description: Base64 encoded thumbnail image
        streaming_services:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              url:
                type: string
                format: uri

    VideoIdentificationResponse:
      type: object
      properties:
        query_id:
          type: string
          format: uuid
        processing_time:
          type: number
          format: float
          description: Processing time in milliseconds
        matches:
          type: array
          items:
            $ref: '#/components/schemas/MatchResult'
        total_matches:
          type: integer

    HistoryItem:
      type: object
      properties:
        query_id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        matches:
          type: array
          items:
            $ref: '#/components/schemas/MatchResult'

    Pagination:
      type: object
      properties:
        total_items:
          type: integer
        total_pages:
          type: integer
        current_page:
          type: integer
        per_page:
          type: integer

    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
