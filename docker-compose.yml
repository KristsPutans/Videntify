version: '3.8'

services:
  # API service
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    depends_on:
      - postgres
      - milvus
    environment:
      - VIDID_DB_URL=postgresql://postgres:postgres@postgres:5432/vidid
      - VIDID_VECTOR_DB_HOST=milvus
      - VIDID_VECTOR_DB_PORT=19530
      - VIDID_DEBUG=true
    command: python src/main.py

  # PostgreSQL database
  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=vidid
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Milvus vector database
  milvus:
    image: milvusdb/milvus:latest
    ports:
      - "19530:19530"
      - "19121:19121"
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
    depends_on:
      - etcd
      - minio
    volumes:
      - milvus_data:/var/lib/milvus

  # Etcd for Milvus
  etcd:
    image: quay.io/coreos/etcd:v3.4.0
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
    volumes:
      - etcd_data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

  # MinIO for Milvus
  minio:
    image: minio/minio:RELEASE.2020-12-03T00-03-10Z
    ports:
      - "9000:9000"
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - minio_data:/data
    command: minio server /data

  # Web admin dashboard
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - api
    environment:
      - VIDID_API_URL=http://api:8000
    command: python -m http.server 8080 --directory /app/web

volumes:
  postgres_data:
  milvus_data:
  etcd_data:
  minio_data:
